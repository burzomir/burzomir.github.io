{"version":3,"file":"main.5613cad0ee043eaca78e.bundle.js","sources":["webpack:///./src/hooks/useTimer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const TimerStatus = {\r\n  Running: 'running',\r\n  Paused: 'paused',\r\n  Finished: 'finished',\r\n}\r\n\r\nexport default (initialTime = 0, initialStatus = TimerStatus.Paused) => {\r\n\r\n  const [time, setTime] = useState(initialTime);\r\n  const [timeLeft, setTimeLeft] = useState(initialTime);\r\n  const [status, setStatus] = useState(initialStatus);\r\n\r\n  useEffect(\r\n    () => {\r\n\r\n      let timeout = status !== TimerStatus.Running || timeLeft === 0\r\n        ? null\r\n        : setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n\r\n      if (status === TimerStatus.Running && timeLeft === 0) {\r\n        setStatus(TimerStatus.Finished);\r\n      }\r\n\r\n      return () => clearTimeout(timeout);\r\n    },\r\n    [timeLeft, status]\r\n  );\r\n\r\n  return {\r\n    timeLeft,\r\n    status,\r\n    set: (time = 0) => {\r\n      setTime(time);\r\n      setTimeLeft(time);\r\n    },\r\n    reset: () => setTimeLeft(time),\r\n    start: () => setStatus(TimerStatus.Running),\r\n    pause: () => setStatus(TimerStatus.Paused),\r\n  };\r\n\r\n};\r\n"],"mappings":"AAEA","sourceRoot":""}